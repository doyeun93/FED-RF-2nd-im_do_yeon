@charset "UTF-8";
/* 주석2 */
/************************************************************************** 
    [사스 핵심 사용법]
    1. 사스 확장자별 파일 구분
    (1) .scss - 사스 관리파일
    -> .sass 확장자는 중괄호, 세미콜론 사용하지않는 문법 사스파일
        따라서 scss 파일을 사용할 것

    (2) .css.map - 사스파일과 CSS 연결정보 파일
    (3) .css - 실제로 적용되는 컴파일된 CSS

    2. 사스파일 컴파일하기
    -> Live Sass Compiler 확장프로그램 설치 후 하단 "Watch Sass" 클릭하여 작동시킴 
    => 에러가 없는 한 컴파일하여 같은 이름의 css 파일을 생성함 "Watching..." 상태가 됨. 
    다시 클릭시 실시간변환상태가 꺼진다 -> 에러 발생시 컴파일이 안되고 cmd창에 에러메시지가 나온다


    3. 주요 문법
    (1) 네스팅 기법 - 선택자 중괄호 안에 다른 하위선택을 하는 것 
    예) div{ h1{color: red;} } 
    장점) 같은 세팅 요소를 선택시 중복된 선택자의 반복을 하지않아도 됨
          또한 같은 구성요소를 묶어서 세팅 관리 가능

    (2) 속성접두어 묶음기법 - 공통된(반복되는) 같은 종류의 하위 속성을
        접두어를 한번만 사용하여 세팅을 묶어주는 방법
    예) font: {size:20px; weight:bold} -> 이때 세미콜론 뒤 중괄호는 꼭 띄어쓰기 

    (3) 변수 사용 기법 - 동일하게 사용할 값을 변수에 넣고 디자인을 배치함
    사용법) $변수명: 값 
    - 변수명은 모두 붙여쓰며 구분단어는 캐믈케이스(camelCase) 또는 케밥케이스(camel-case) 사용한다
    - 변수의 범위는 변수를 선언 후 하위로 상속되어 값이 유지된다

    (4) 파일 분리기법 : @import 
        - 부분 파일을 분리하여 공통 모듈로 합쳐서 사용한다
        - 부분 파일명 : 사스에서 언더바를 붙여서 사용하는 것이 원칙이지만, 
                        언더바를 안써도 기본적으로 부분파일처리해줌
        - 파일 호출시 확장자 생략 가능함
        예) @import "reset";
        - 일반 CSS @import와는 다름 -> http요청을 하지않음


**************************************************************************/
.wrapper {
  max-width: 1000px;
  margin: 0 auto;
}

.top-area {
  color: purple;
}
.top-area h1 {
  color: #a69cf3;
  font-size: 40px;
  font-family: "Times New Roman";
  text-align: center;
  text-decoration: underline;
  text-underline-offset: 10px;
  text-shadow: 5px 5px 4px rgba(0, 0, 0, 0.5568627451);
  background-color: lightpink;
  background-image: url(../images/flower.png);
  background-size: 200px;
  background-position: center;
  background-repeat: repeat-x;
  padding: 20px;
}/*# sourceMappingURL=main.css.map */